using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using MyClassLib.WorldOfTanks;
/*
 Перегрузка операторов

Разработать программу, моделирующую танковый бой. 
В танковом бою участвуют 5 танков «Т-34» и 5 танков «Pantera».
Каждый танк («Т-34» и «Pantera») описываются параметрами: 
«Боекомплект», «Уровень брони», «Уровень маневренности». 
Значение данных параметров задаются случайными числами от 0 до 100.
Каждый танк участвует в парной битве, т.е. первый танк «Т-34» сражается с первым танком «Pantera» и т. д.
Победа присуждается тому танку, который превышает противника
по двум и более параметрам из трех (пример: см. программу).
Основное требование: сражение (проверку
на победу в бою) реализовать путем перегрузки оператора «*» (произведение). 
1.	В решение добавить новый проект с именем «Day7 (Tanks)»,
в котором будут промоделированы танковые сражения.
В данный проект добавить ссылку на библиотеку классов «MyClassLib».
2.	В библиотеке классов «MyClassLib» создать папку «WordOfTanks», а в ней разработать класс с именем «Tank».
В классе должно быть реализовано
●	Поля
закрытые поля, предназначенные для представления
1.	Названия танка.
2.	Уровня боекомплекта танка.
3.	Уровня брони. 
4.	Уровня маневренности.
●	Конструктор
Конструктор с параметрами, обеспечивающий инициализацию всех полей класса Tank.
При этом Боекомплект, Уровень брони, Уровень маневренности инициализируются
случайными числами от 0 до 100 %. Название танка передаются в конструктор из функции Main(). 
●	Перегрузка оператора «^»(произведение)
При перегрузке оператора «^» (произведение) должна быть
реализована проверка на победу в бою одного танка по отношению к другому.
Критерий победы — победивший танк должен превышать проигравший
танк не менее чем по двум из трех параметров (Боекомплект, Уровень брони, Уровень маневренности). 
●	Методы:
Получение текущих значений параметров танка: Бое­комплект, Уровень брони, Уровень маневренности в виде строки.

Важно! При разработке программы использовать обработку исключительных ситуаций.
Варианты возможных исключительных ситуаций рассмотреть самостоятельно!
 */
namespace Tanks
{
	class Program
	{
		static void Main(string[] args)
		{
			const int amountOfTanks = 5;

			string pantera = "Pantera";
			string tiThreeFour = "T-34";

			//Для вызова исключения:
			//string pantera = null;
			//string tiThreeFour = null;

			Tank[]ourTank   = new Tank[amountOfTanks];
			Tank []enemyTank = new Tank[amountOfTanks];

			Console.WriteLine("\n------------------------Ours---------------------------\n");
			for (int i = 0; i < ourTank.Length; i++)
			{
				ourTank[i] = new Tank(tiThreeFour);
				ourTank[i].Print();
			}

			Console.WriteLine("\n-----------------------Enemies----------------------------\n");
			for (int i = 0; i < ourTank.Length; i++)
			{
				enemyTank[i] = new Tank(pantera);
				enemyTank[i].Print();
			}
			Console.WriteLine("\n-----------------------Results----------------------------\n");


			for(int i=0; i<amountOfTanks; i++)
			{
				string Game = ourTank[i] * enemyTank[i];
				Console.WriteLine(Game);
			}

			Console.ReadKey();
		}
	}
}
